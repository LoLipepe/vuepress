(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{305:function(e,n,s){"use strict";s.r(n);var o=s(14),t=Object(o.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"vuepress-部署到github-pages-使用-github-actions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vuepress-部署到github-pages-使用-github-actions"}},[e._v("#")]),e._v(" vuepress 部署到GitHub Pages 使用 Github Actions")]),e._v(" "),n("p",[e._v("1.生成ACCESS_TOKEN: 在我们GitHub的个人设置中，点击 "),n("code",[e._v("Settings")]),e._v("，选择 "),n("code",[e._v("Developer settings")]),e._v("，然后选择 "),n("code",[e._v("Personal access tokens")]),e._v("，然后选择 "),n("code",[e._v("Tokens (classic)")]),e._v("，点击 "),n("code",[e._v("Generate new token(classic)")]),e._v("，在 "),n("code",[e._v("Note")]),e._v(" 中填写一个备注，然后选择 "),n("code",[e._v("repo")]),e._v("，最后点击 "),n("code",[e._v("Generate token")]),e._v("。\n2.在个人项目仓库页面上，点击 "),n("code",[e._v("Settings")]),e._v("，选择 "),n("code",[e._v("Secrets and variables")]),e._v("，然后点击 "),n("code",[e._v("Actions")]),e._v(" ，然后点击 "),n("code",[e._v("New repository secret")]),e._v("，在 "),n("code",[e._v("Name")]),e._v(" 中填写 "),n("code",[e._v("ACCESS_TOKEN")]),e._v(" ，在 "),n("code",[e._v("Value")]),e._v(" 中填写你生成的 ACCESS_TOKEN。\n3.设置Actions权限: 在个人项目仓库页面上，点击"),n("code",[e._v("Settings")]),e._v("，选择"),n("code",[e._v("Actions")]),e._v("，然后点击"),n("code",[e._v("General")]),e._v("，然后选择"),n("code",[e._v("Workflow permissions")]),e._v("，然后选择 "),n("code",[e._v("Read and write permissions")]),e._v(" ,并且勾选 "),n("code",[e._v("Allow GitHub Actions to create and approve pull requests")]),e._v(" 。\n4. 创建一个Github仓库，命名为："),n("code",[e._v("<username>.github.io")]),e._v("\n5. 创建一个分支，命名为："),n("code",[e._v("main")]),e._v("\n6. 创建一个 "),n("code",[e._v(".github/workflows/deploy.yml")]),e._v(" 文件，内容如下：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('name: Deploy\n\n# Controls when the workflow will run\non:\n# 对main分支的提交和拉去操作执行监听\npush:\n    branches: [ "main" ]\npull_request:\n    branches: [ "main" ]\n\n# Allows you to run this workflow manually from the Actions tab\nworkflow_dispatch:\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n# This workflow contains a single job called "build"\nbuild:\n    # The type of runner that the job will run on\n    runs-on: ubuntu-latest\n\n    # Steps represent a sequence of tasks that will be executed as part of the job\n    steps:\n    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it\n    - uses: actions/checkout@v3\n    \n    # 解决v17版本 Error:0308010C:digital envelope routines::unsupported\n    - name: Install NodeJS\n        uses: actions/setup-node@v3\n        with:\n        node-version: \'16.16.0\'\n\n    # 打包 打包命令与package.json中一致\n    - name: Build\n        run:  |\n        npm i\n        npm run docs:build\n\n    # 部署到 GitHub Pages 下面的uses是固定的他的GitHub: https://github.com/JamesIves/github-pages-deploy-action\n    - name: Deploy\n        uses: JamesIves/github-pages-deploy-action@v4\n        with:\n        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }} # 也就是我们刚才生成的 secret\n        BRANCH: gh-pages # 部署到 gh-pages 分支，因为 main 分支存放的一般是源码，而 gh-pages 分支则用来存放生成的静态文件(不用自己创建,程序会自动创建分支)\n        FOLDER: docs/.vuepress/dist # vuepress 生成的静态文件存放的地方(根据需求自行修改)\n')])])]),n("p",[e._v("7.点击项目仓库中的 "),n("code",[e._v("Settings>>Pages>>")]),e._v(" 中的 "),n("code",[e._v("Branch")]),e._v(" 选择 "),n("code",[e._v("gh-pages")]),e._v(" ,路径选择 "),n("code",[e._v("/")]),e._v(" 然后点击 "),n("code",[e._v("Save")]),e._v(" 保存")])])}),[],!1,null,null,null);n.default=t.exports}}]);